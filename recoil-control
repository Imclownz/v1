// STABILIZER PRO v8.0 (Free Fire Recoil Control)
class StabilizerPro {
    constructor() {
        this.weaponDatabase = this.getWeaponDatabase();
        this.sessionToken = "STABv8_" + Date.now().toString(36);
        this.recoilPatterns = {
            ak47: [0.12, 0.25, 0.08, -0.10, -0.05, 0.15],
            m4a1: [0.09, 0.16, 0.04, -0.07, -0.04, 0.11],
            sniper: [0.006, 0.20, 0.006, -0.006, -0.006, 0.01],
            default: [0.05, 0.1, 0.03, -0.04, -0.02, 0.07]
        };
        this.bulletCounter = 0;
        this.headshotBoost = 1.0;
    }

    process(body) {
        try {
            const startTime = performance.now();
            let data = JSON.parse(body);
            const weaponType = data.weaponType || 'default';
            const profile = this.weaponDatabase[weaponType] || this.weaponDatabase.default;
            
            // Phát hiện trạng thái headshot
            if (data.aimSystem?.lockStrength > 0.98) {
                this.headshotBoost = 1.5; // Tăng cường ổn định khi headshot
            }
            
            data.recoilSystem = {
                version: "8.0",
                horizontalCompensation: this.calculateHorizontalComp(profile),
                verticalCompensation: this.calculateVerticalComp(profile),
                crosshairStabilization: this.calculateStabilization(),
                headshotBoost: this.headshotBoost,
                processingTime: performance.now() - startTime
            };
            
            // Xử lý giật theo từng viên đạn
            if (data.gameState?.isFiring) {
                this.applyPerBulletCompensation(data.recoilSystem, weaponType);
            }
            
            return JSON.stringify(data);
        } catch (e) {
            console.error("[STABILIZER PRO] Error:", e.message.substring(0,20));
            return body;
        }
    }

    // BÙ GIẬT THÔNG MINH
    calculateHorizontalComp(profile) {
        let comp = profile.horizontalBase;
        
        // Giảm giật khi headshot
        if (this.headshotBoost > 1.0) {
            comp *= 0.4;
        }
        
        return comp * this.headshotBoost;
    }

    calculateVerticalComp(profile) {
        let comp = profile.verticalBase;
        
        // Giảm giật khi headshot
        if (this.headshotBoost > 1.0) {
            comp *= 0.35;
        }
        
        return comp * this.headshotBoost;
    }

    // ỔN ĐỊNH TÂM NGẮM
    calculateStabilization() {
        const baseStability = 1.0;
        const headshotStability = this.headshotBoost > 1.0 ? 1.8 : 1.0;
        
        return {
            x: baseStability * headshotStability * 0.88,
            y: baseStability * headshotStability * 0.95,
            z: baseStability * headshotStability * 0.92
        };
    }

    // BÙ GIẬT THEO TỪNG VIÊN
    applyPerBulletCompensation(recoilSystem, weaponType) {
        this.bulletCounter++;
        const pattern = this.recoilPatterns[weaponType] || this.recoilPatterns.default;
        const index = this.bulletCounter % pattern.length;
        
        recoilSystem.horizontalCompensation += pattern[index] * -0.9;
        recoilSystem.verticalCompensation += pattern[index] * -1.4;
        
        // Tự động giảm giật sau 5 viên
        if (this.bulletCounter > 5) {
            recoilSystem.verticalCompensation *= 0.5;
        }
    }

    getWeaponDatabase() {
        return {
            default: {horizontalBase: 0.035, verticalBase: 0.065},
            sniper: {horizontalBase: 0.008, verticalBase: 0.095},
            ak47: {horizontalBase: 0.065, verticalBase: 0.125},
            m4a1: {horizontalBase: 0.048, verticalBase: 0.085},
            shotgun: {horizontalBase: 0.075, verticalBase: 0.135}
        };
    }
}

const recoilSystem = new StabilizerPro();
$done({ body: recoilSystem.process($response.body) });
